事务：
	事务就是一组包含一条或多条语句的逻辑单元，每个事务都是一个原子操作，在事务中的语句被作为一个整体，要么一起被提交，作用在数据库上，使数据库数据永久的修改；
	要么一起被撤回，对数据库不做任何修改。
	
	oracle的事务基本控制语句：
		set transaction：设置事务的属性；
		commit：提交事务；
		savepoint：设置保存点；
		rollback：回滚事务；
		rollback ro savepoint：回滚事务至保存点。
		
	事务的类型：
		1、显示方式：利用命令完成
			sql statement
				...
			commit|rollback
		2、隐式方式：没有明确的开始和结束标志。它由数据库自动开启，当一个程序正常结束或使用DDL语言时会被自动提交，而操作异常时也会自动回滚。
		   如果设置autocommit为打开状态（默认关闭），则每次执行DML操作都会被自动提交。语法：set autocommit on|off
		   

	事务保存点：
		insert into z_trigger(id,operate_type,operate_time) values(sys_guid(),'1',sysdate);
		insert into z_trigger(id,operate_type,operate_time) values(sys_guid(),'2',sysdate);
		insert into z_trigger(id,operate_type,operate_time) values(sys_guid(),'3',sysdate);
		savepoint s1;
		insert into z_trigger(id,operate_type,operate_time) values(sys_guid(),'4',sysdate);
		insert into z_trigger(id,operate_type,operate_time) values(sys_guid(),'5',sysdate);
		rollback to s1;
		当执行以下：select * from z_trigger;会查询出
		
		
	事务的ACID特性：
		原子性：事务中的程序是数据库的逻辑工作单位，它对数据的修改要么全部执行，要么完全不执行。
		一致性：事务的执行前后数据库都必须处于一致性状态，他是相对脏读而言的。
		分离性：事务之间不能相互的干扰。也就是说，一个事务操作的数据不会被其他事务看到和执行。
		持久性：事务一旦提交，那么将会对数据永久的修改。
		
		
		
锁：
	锁出现在数据共享的环境中，它是一种机制，在访问相同资源时，可以防止事务之间的破坏性交互。
	事务的隔离性要求当前事务不能影响其他的事务，所以当多个会话访问相同的资源时，数据库系统会利用锁确保他们像队列一样依次进行。oracle处理数据时用到的锁是自动获取的。
	oracle利用很低的约束提供了最大程度的并发性，例如某会话正在修改一条记录，那么仅仅该记录会被锁定。而其他会话可以随时做读取操作，但读取的依然是修改前的数据。
	oracle的锁保证了数据的完整性。例如当一个会话对某条记录正在修改时，另一个会话也来修改该行记录，在没有任何处理的情况下保留的数据会有随机性，而这种数据是没有任何意义的，为脏数据，
	如果此时用了行级锁，第一个会话在修改记录时封锁该行，那么第二个会话此时只能等待，这样就避免了脏数据。
	
	
	
锁的分类：oracle中分为两种模式的锁，一种是排它锁(X锁)，另一种是共享锁(S锁)
	1、排它锁：也叫写锁。这种模式的锁防止资源的共享，用作数据的修改。假如有事务T给数据A加上了该锁，那么其他的事务将不能对数据A添加任何的锁，所以此时只允许事务T对该数据进行读取和修改，
	   直到事务T完成将该类型的锁释放为止。
	2、共享锁：也叫读锁。该模式下的数据只能被读取，不能被修改。如果事务T给数据A加上了共享锁后，那么其他事务不能对该行数据加排它锁，只能加共享锁。加了该锁的数据可以被并发访问。
锁是实现并发的主要手段，在数据库中频繁使用。

锁的类型：
	DML锁：该类型的锁称为数据锁，用于保护数据。
	DDL锁：可以保护模式中对象的结构。
	内部栓锁：
	其中DML锁又可以分为：
		a、行级锁(TX)，也可以称为事务锁。当修改表中的某行记录时，需要对修改的记录加行级锁，防止两个事务同事修改该条记录，事务结束，该锁就会释放，该锁是粒度最细的锁。属于排他锁。
		b、表级锁(TM)，主要作用是防止在修改表的数据时，表的结构发生变化。例如，会话S在修改表A的数据时，他会得到表A的TM锁，此时不允许其他会话对该表进行更改会删除操作。
		   注意：此时修改表结构的会话不会立刻报错，会处于排队状态。
		         如果在同一个事物中先做修改或者删除某条记录且未提交的时候，此时又对表做了DDL操作，此时会成功，并且之前未被提交的事务会被自动提交。
				 
				 
		表级锁包含以下几种模式：
			a、ROW SHARE，行级共享锁。该模式下不允许其他的并行会话对同一张表使用排他锁，但允许其利用DML