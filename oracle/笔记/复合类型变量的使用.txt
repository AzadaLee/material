复合类型：每个变量可以包含几个元素，可以存储多个值。这种变量类型同标量类型使用方式有所不同，复合类型需要先声明，然后才能声明该类型的变量。
最常用的复合类型有三种：记录类型、索引表类型和varray(动态数组类型)。
1、记录类型的使用
	声明语法
	语法a、
		type type_name is record(
			field_name datatype [not null]{:=|default} expression],  --即和普通标量的声明一致
			field_name datatype ......
			.
			.
			.
		);
		例子：
		declare 
			--开始定义类型，语法：type type_name is record
			type cust_type is record(
				c_name varchar2(20),
				c_gender bao_t_cust_info.cust_gender%type,
				c_createdate date 
			);
			--定义类型结束
			
			--使用自定义的记录类型声明变量
			custinfo cust_type;
		begin 
			select t.cust_name,t.cust_gender,t.create_date into custinfo from bao_t_cust_info t where t.id='7bdb04d1-953c-4092-ab49-b5431463b8d8';
			dbms_output.put_line('客户姓名：'||custinfo.c_name);
			dbms_output.put_line('客户性别：'||custinfo.c_gender);
			dbms_output.put_line('创建时间：'||custinfo.c_createdate);
		end;

		例子：
		declare 
			v v_test := v_test('x','xx');
			var1 varchar2(20);
			var2 varchar2(20);
			var3 varchar2(20);
		begin
			--var1 := v(1);
			--dbms_output.put_line(var1);
			--dbms_output.put_line(v);--报错，不可以直接输出数组
			dbms_output.put_line(v.first());--得到第一个元素
			dbms_output.put_line(v.limit());--数组容量，非数组元素个数
			dbms_output.put_line(v.count());--数组元素个数
		end;


	语法b、
		利用%rowtype声明记录类型数据
		declare
			custinfos bao_t_cust_info%rowtype;
		begin
			select * from bao_t_cust_info into custinfos;
			....
			...
		end;
		
		
		
2、PL/SQL索引表类型(关联数组)
	该类型和数组相似，它利用键值查找对应的值。这里的键和真正数组的下标不同，索引表中允许使用字符串。数组的长度不是固定的，可以根据需要自动增长。
	其中的键是整数或者字符串。而其中的值可以是普通的标量类型，也可以是记录类型。
	声明语法(花括弧'{}'代表必输项)
		type type_name is table of{
			column_type|variable_name%type|table_name.column_name%type|table_name%rowtype
		}
		[not null]
		index by {pls_integen|binary_integer|varchar2(v_size)}--数组下标的类型
		
		例子：
			declare
				type cust_tab is table of bao_t_cust_info%rowtype index by pls_integer;
				custinfo cust_tab;
			begin
				select * into custinfo(1) from bao_t_cust_info t where t.id='7bdb04d1-953c-4092-ab49-b5431463b8d8';
				dbms_output.put_line('客户姓名：'||custinfo(1).cust_name);
				dbms_output.put_line('客户性别：'||custinfo(1).cust_gender);
				--dbms_output.put_line('创建时间：'||custinfo(1).createdate);
			end;
			
			
3、varray变长数组
	该类型的元素个数是需要限制的，它是一个存储有序元素的集合。集合下标从1开始，比较适合较少的数据使用。
	声明语法
		type type_name is {varray|varying array }(size_limit) of element_type [not null]
		其中，size_limit为该数组的长度；element_type代表元素的类型。
		例子：
			declare 
				type cust_arr is varray(100) of varchar2(20);--声明一个长度为100变长数组，数组中存放最大长度为20的varchar2类型的元素
				custarray cust_arr;--声明一个自定义数组类型的变量，注意使用时必须初始化
				arrlength number(3);
			begin
				custarray := cust_arr();--初始化数组
				
				arrlength := custarray.count();
				dbms_output.put_line('数组长度：'||arrlength);
				--dbms_output.put_line('客户性别：'||custarray(i));
			end;
		

		
		
总结：
	1、记录类型和varray类型不同点：
		a、记录类型不能使用sql进行创建（即：create or replace type r_test is record(....)），而动态数组类型是可以的，创建完成以后可以在types模块下查看；
		b、记录类型在使用时只需声明一下即可，而动态数组类型在声明时或声明后必须初始化才能使用；
		3、记录类型获取值得方式如同map，通过记录类型里面的键获取（r_test.field_name），而动态数组类型通过角标获取（v_test(1)）；
