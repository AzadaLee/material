他面的是java基础知识，包括集合map类，spring的ioc、aop，sql的优化等，一起持续四十分钟，整体比较理想，除了map中迭代删除和for循环删除我卡了一下。
包括如何拍错，如何优化jvm，如何调整nginx参数和tomcat参数等。在此过程中，问了很多基础知识，比如各种mysql数据库引擎的区别，各种索引类型的区别和用途，还有threadlocal，
一致性hash算法原理，redis架构原理，各种缓存数据库区别，数据库读写分离技术以及各种序列化的方式等，当然重点还有并发包各个类的实现原理等。
整个过程持续有两小时，除了threadlocal实现说的有点问题，分布式主键生成策略说的太少，以及秒杀系统说的不够全面，倒排索引的实现原理

不过还问了linux/shell相关的内容，比如问了sed的实现原理，awk循环实现等，js的问题，网络方面的问题等。除此之外还让我写程序实现“2000W用户根据年龄排序”的问题。
他的问题主要是针对面试经历来询问，关于系统性能优化方面问题比较多，比如数据库，缓存，消息系统一般能支持的用户量，并发量等，怎么去做优化，怎么发现问题。

涉及到的技术包括SOA，数据库，消息，缓存等

他面的第一个问题是IO/NIO的区别，这个问题我说的很乱，不是说我回答的不对，就是条理有点乱，想到哪说哪。然后又问NIO里面常见的类，常见并发包下的类实现，
线程池各参数的作用和调整，JVM内存模型，AOP（多种动态代理实现），数据库（数据库引擎，索引，执行计划），
缓存（各缓存区别，实现原理等），消息（JMS机制，主从部署备份实现等），zookeeper选举算法，dubbo框架，各种序列化框架，一致性hash，倒排索引原理实现等。
同时会闻到很多java底层实现的内容，比如CAS，AQS，java内存模型，各种垃圾回收算法，分布式事务，js的闭包，作用域链，还有类加载器，ASM字节码框架实现等等
比如volatile和syschonized的底层实现原理（说白了就是分析内存语义，重排序和内存屏障等），G1垃圾回收算法（java7才用，我们现在线上都是6，几乎没任何经验），
断网时如何处理重复订单问题（幂等性设计），myabatis和ibatis的区别（ibatis是很久前用的，我本身确实记不得区别了），lucence和solr的优化（项目中用的也很少）等